// B√†i t·∫≠p 1: Chuy·ªÉn ƒë·ªïi HTML sang JSX
function ProductList() {
  return (
    <div className="container">
      <h1>Danh s√°ch s·∫£n ph·∫©m</h1>
      <div className="product">
        <img src="product1.jpg" alt="S·∫£n ph·∫©m 1" />
        <h3>iPhone 15</h3>
        <p className="price">25,000,000 VNƒê</p>
        <button onClick={() => console.log('Th√™m v√†o gi·ªè h√†ng')}>
          Th√™m v√†o gi·ªè h√†ng
        </button>
      </div>
      <hr />
      <footer>
        <p>&copy; 2024 C·ª≠a h√†ng ƒëi·ªán tho·∫°i</p>
      </footer>
    </div>
  );
}

// B√†i t·∫≠p 2: Th√¥ng tin c√° nh√¢n
function PersonInfo() {
  const person = {
    firstName: "Nguy·ªÖn",
    lastName: "Minh",
    age: 23,
    email: "minh.nguyen@email.com",
    hobbies: ["ƒë·ªçc s√°ch", "nghe nh·∫°c", "du l·ªãch"],
    isStudent: true
  };

  return (
    <div className="person-card">
      <h2>Th√¥ng tin c√° nh√¢n</h2>
      <p><strong>H·ªç t√™n:</strong> {person.firstName} {person.lastName}</p>
      <p><strong>Tu·ªïi:</strong> {person.age} (sinh nƒÉm {2024 - person.age})</p>
      <p><strong>Email:</strong> {person.email}</p>
      <p><strong>Tr·∫°ng th√°i:</strong> {person.isStudent ? "Sinh vi√™n" : "ƒêi l√†m"}</p>
      <p><strong>S·ªë s·ªü th√≠ch:</strong> {person.hobbies.length}</p>
    </div>
  );
}

// B√†i t·∫≠p 3: Ch√†o theo th·ªùi gian
function TimeGreeting() {
  const currentHour = new Date().getHours();
  
  const greeting = currentHour >= 5 && currentHour < 12 
    ? "Ch√†o bu·ªïi s√°ng!" 
    : currentHour >= 12 && currentHour < 18 
    ? "Ch√†o bu·ªïi chi·ªÅu!"
    : currentHour >= 18 && currentHour < 22
    ? "Ch√†o bu·ªïi t·ªëi!"
    : "Ch√∫c ng·ªß ngon!";

  return (
    <div>
      <h1>{greeting}</h1>
      <p>Hi·ªán t·∫°i l√† {currentHour}h</p>
    </div>
  );
}

// B√†i t·∫≠p 4: Card s·∫£n ph·∫©m v·ªõi styling
function ProductCard() {
  const product = {
    name: "Laptop Dell XPS 13",
    price: 35000000,
    image: "https://via.placeholder.com/300x200",
    inStock: true,
    discount: 10
  };

  const originalPrice = product.price;
  const discountedPrice = product.price * (1 - product.discount / 100);

  return (
    <div className="product-card" style={{
      border: '1px solid #ddd',
      borderRadius: '8px',
      padding: '16px',
      maxWidth: '300px',
      margin: '16px'
    }}>
      <img 
        src={product.image} 
        alt={product.name}
        style={{ width: '100%', borderRadius: '4px' }}
      />
      <h3>{product.name}</h3>
      
      <div>
        {product.discount > 0 ? (
          <>
            <span style={{ 
              color: 'red', 
              textDecoration: 'line-through',
              marginRight: '10px'
            }}>
              {originalPrice.toLocaleString()} VNƒê
            </span>
            <span style={{ color: 'blue', fontWeight: 'bold' }}>
              {discountedPrice.toLocaleString()} VNƒê
            </span>
            <span style={{ 
              backgroundColor: 'red', 
              color: 'white', 
              padding: '2px 6px',
              borderRadius: '4px',
              fontSize: '12px',
              marginLeft: '10px'
            }}>
              -{product.discount}%
            </span>
          </>
        ) : (
          <span style={{ color: 'blue', fontWeight: 'bold' }}>
            {originalPrice.toLocaleString()} VNƒê
          </span>
        )}
      </div>

      <p style={{ 
        color: product.inStock ? 'green' : 'gray',
        fontWeight: 'bold'
      }}>
        {product.inStock ? "C√≤n h√†ng" : "H·∫øt h√†ng"}
      </p>
    </div>
  );
}

// B√†i t·∫≠p 5: WeatherCard
function WeatherCard() {
  const weatherData = {
    city: "H√† N·ªôi",
    temperature: 28,
    condition: "sunny",
    humidity: 65,
    windSpeed: 12
  };

  const getWeatherIcon = (condition) => {
    switch(condition) {
      case 'sunny': return '‚òÄÔ∏è';
      case 'cloudy': return 'üå§Ô∏è';
      case 'rainy': return 'üåßÔ∏è';
      default: return 'üå§Ô∏è';
    }
  };

  const getBackgroundColor = (condition) => {
    switch(condition) {
      case 'sunny': return '#fff3cd';
      case 'cloudy': return '#f8f9fa';
      case 'rainy': return '#cff4fc';
      default: return '#f8f9fa';
    }
  };

  return (
    <div style={{
      backgroundColor: getBackgroundColor(weatherData.condition),
      padding: '20px',
      borderRadius: '12px',
      textAlign: 'center',
      maxWidth: '250px',
      margin: '20px auto',
      boxShadow: '0 2px 8px rgba(0,0,0,0.1)'
    }}>
      <h2>{weatherData.city}</h2>
      <div style={{ fontSize: '48px', margin: '10px 0' }}>
        {getWeatherIcon(weatherData.condition)}
      </div>
      <div style={{ fontSize: '36px', fontWeight: 'bold', margin: '10px 0' }}>
        {weatherData.temperature}¬∞C
      </div>
      <div style={{ fontSize: '14px', color: '#666' }}>
        <p>ƒê·ªô ·∫©m: {weatherData.humidity}%</p>
        <p>T·ªëc ƒë·ªô gi√≥: {weatherData.windSpeed} km/h</p>
      </div>
    </div>
  );
}

export { ProductList, PersonInfo, TimeGreeting, ProductCard, WeatherCard };
// =============================================================================
// DAY 3: COMPONENTS & PROPS - T·∫†O V√Ä S·ª¨ D·ª§NG PROPS TRONG REACT
// =============================================================================
// Props l√† c√°ch truy·ªÅn data t·ª´ component cha sang component con
// State l√† data n·ªôi b·ªô c·ªßa component c√≥ th·ªÉ thay ƒë·ªïi theo th·ªùi gian
// =============================================================================

import React, { useState } from 'react';
import ProductCard from './components/ProductCard';  // Import component con
import SocialPost from './components/SocialPost';   // Import component con

function App() {
  // =============================================================================
  // 1. STATE MANAGEMENT - Qu·∫£n l√Ω data c·ªßa to√†n b·ªô ·ª©ng d·ª•ng
  // =============================================================================
  
  // useState ƒë·ªÉ t·∫°o state cho danh s√°ch s·∫£n ph·∫©m
  // T·∫°i sao d√πng array? V√¨ ch√∫ng ta c√≥ nhi·ªÅu s·∫£n ph·∫©m c·∫ßn hi·ªÉn th·ªã
  const [products] = useState([
    // =============================================================================
    // 2. PRODUCT DATA STRUCTURE - C·∫•u tr√∫c d·ªØ li·ªáu s·∫£n ph·∫©m
    // =============================================================================
    // M·ªói object trong array s·∫Ω ƒë∆∞·ª£c truy·ªÅn l√†m props cho ProductCard component
    {
      id: 1,                              // Unique identifier - b·∫Øt bu·ªôc cho key prop
      name: 'iPhone 15 Pro Max',          // String prop - t√™n s·∫£n ph·∫©m
      description: 'Smartphone cao c·∫•p v·ªõi chip A17 Pro v√† camera tuy·ªát v·ªùi', // String prop - m√¥ t·∫£
      image: 'https://via.placeholder.com/300x200/007bff/white?text=iPhone+15', // String prop - URL h√¨nh ·∫£nh
      originalPrice: 29990000,            // Number prop - gi√° g·ªëc
      discount: 2000000,                  // Number prop - s·ªë ti·ªÅn gi·∫£m gi√°
      rating: 5,                          // Number prop - ƒë√°nh gi√° (1-5 sao)
      reviewCount: 128,                   // Number prop - s·ªë l∆∞·ª£t ƒë√°nh gi√°
      stock: 15,                          // Number prop - s·ªë l∆∞·ª£ng t·ªìn kho
      isNew: true                         // Boolean prop - s·∫£n ph·∫©m m·ªõi?
    },
    {
      id: 2,                              // ID kh√°c ƒë·ªÉ ph√¢n bi·ªát
      name: 'MacBook Air M2',             // Props c√≥ th·ªÉ c√≥ gi√° tr·ªã kh√°c nhau
      description: 'Laptop m·ªèng nh·∫π v·ªõi hi·ªáu nƒÉng m·∫°nh m·∫Ω cho c√¥ng vi·ªác',
      image: 'https://via.placeholder.com/300x200/6c757d/white?text=MacBook+Air',
      originalPrice: 31990000,            // Gi√° kh√°c v·ªõi s·∫£n ph·∫©m tr∆∞·ªõc
      discount: 1500000,                  // Gi·∫£m gi√° kh√°c
      rating: 4,                          // Rating th·∫•p h∆°n
      reviewCount: 89,                    // √çt review h∆°n
      stock: 8,                           // T·ªìn kho √≠t h∆°n
      isNew: false                        // Kh√¥ng ph·∫£i s·∫£n ph·∫©m m·ªõi
    },
    {
      id: 3,
      name: 'AirPods Pro 2',
      description: 'Tai nghe kh√¥ng d√¢y v·ªõi ch·ªëng ·ªìn ch·ªß ƒë·ªông',
      image: 'https://via.placeholder.com/300x200/28a745/white?text=AirPods',
      originalPrice: 6990000,
      discount: 0,                        // Kh√¥ng c√≥ gi·∫£m gi√°
      rating: 5,
      reviewCount: 256,
      stock: 0,                           // H·∫øt h√†ng - component s·∫Ω hi·ªÉn th·ªã kh√°c
      isNew: false
    }
  ]);

  // =============================================================================
  // 3. SOCIAL POSTS DATA - C·∫•u tr√∫c d·ªØ li·ªáu ph·ª©c t·∫°p h∆°n
  // =============================================================================
  // State c√≥ th·ªÉ thay ƒë·ªïi (setPosts) - kh√°c v·ªõi products ch·ªâ ƒë·ªçc
  const [posts, setPosts] = useState([
    {
      id: 1,
      // =============================================================================
      // NESTED OBJECT PROPS - Props c√≥ th·ªÉ l√† object ph·ª©c t·∫°p
      // =============================================================================
      author: {                           // Object prop - th√¥ng tin t√°c gi·∫£
        name: 'Nguy·ªÖn VƒÉn A',            // String b√™n trong object
        avatar: 'https://via.placeholder.com/48x48/007bff/white?text=NVA', // URL avatar
        verified: true                    // Boolean - t√†i kho·∫£n ƒë√£ x√°c th·ª±c?
      },
      content: 'H√¥m nay th·∫≠t l√† m·ªôt ng√†y tuy·ªát v·ªùi! V·ª´a ho√†n th√†nh d·ª± √°n React ƒë·∫ßu ti√™n üéâ\n\nC·∫£m ∆°n c√°c b·∫°n ƒë√£ ·ªßng h·ªô v√† gi√∫p ƒë·ª° m√¨nh trong su·ªët qu√° tr√¨nh h·ªçc t·∫≠p.',
      image: 'https://via.placeholder.com/500x300/28a745/white?text=Project+Demo', // Optional image
      timestamp: new Date(Date.now() - 2 * 60 * 60 * 1000), // Date object prop - 2 hours ago
      location: 'H√† N·ªôi, Vi·ªát Nam',      // String prop - ƒë·ªãa ƒëi·ªÉm
      hashtags: ['React', 'WebDevelopment', 'Coding'], // Array prop - danh s√°ch hashtags
      likes: 42,                          // Number prop - s·ªë l∆∞·ª£t th√≠ch
      comments: 8,                        // Number prop - s·ªë b√¨nh lu·∫≠n  
      shares: 3,                          // Number prop - s·ªë l∆∞·ª£t chia s·∫ª
      userLiked: false                    // Boolean prop - user ƒë√£ th√≠ch ch∆∞a?
    },
    {
      id: 2,
      author: {
        name: 'Tr·∫ßn Th·ªã B',              // Author object kh√°c
        avatar: 'https://via.placeholder.com/48x48/e74c3c/white?text=TTB',
        verified: false                   // Kh√¥ng ƒë∆∞·ª£c verified
      },
      content: 'Chia s·∫ª m·ªôt s·ªë tips h·ªçc React cho ng∆∞·ªùi m·ªõi b·∫Øt ƒë·∫ßu:\n\n1. B·∫Øt ƒë·∫ßu v·ªõi functional components\n2. H·ªçc useState tr∆∞·ªõc khi h·ªçc useEffect\n3. Th·ª±c h√†nh nhi·ªÅu v·ªõi c√°c project nh·ªè\n4. ƒê·ªçc documentation ch√≠nh th·ª©c\n\nCh√∫c c√°c b·∫°n h·ªçc t·ªët! üí™',
      timestamp: new Date(Date.now() - 6 * 60 * 60 * 1000), // 6 hours ago
      hashtags: ['ReactTips', 'Learning', 'Programming'], // Array hashtags kh√°c
      likes: 67,                          // S·ªë li·ªáu kh√°c
      comments: 12,
      shares: 15,
      userLiked: true                     // User ƒë√£ th√≠ch b√†i n√†y
    }
  ]);

  // =============================================================================
  // 4. CART STATE - State c√≥ th·ªÉ thay ƒë·ªïi th√¥ng qua user interaction
  // =============================================================================
  // Cart l√† array r·ªóng ban ƒë·∫ßu, s·∫Ω ƒë∆∞·ª£c update khi user th√™m s·∫£n ph·∫©m
  const [cart, setCart] = useState([]);  // Empty array initially

  // =============================================================================
  // 5. EVENT HANDLERS - Functions truy·ªÅn l√†m props cho components
  // =============================================================================
  // C√°c function n√†y s·∫Ω ƒë∆∞·ª£c truy·ªÅn xu·ªëng components con th√¥ng qua props
  
  // Handler cho ProductCard - nh·∫≠n product object t·ª´ component con
  const handleAddToCart = (product) => {
    // setCart v·ªõi function update - nh·∫≠n previous state l√†m parameter
    setCart(prev => {
      // Ki·ªÉm tra s·∫£n ph·∫©m ƒë√£ c√≥ trong cart ch∆∞a
      const existingItem = prev.find(item => item.id === product.id);
      
      if (existingItem) {
        // N·∫øu c√≥ r·ªìi th√¨ tƒÉng quantity
        return prev.map(item =>
          item.id === product.id
            ? { ...item, quantity: item.quantity + 1 }  // Spread operator + update
            : item                                        // Gi·ªØ nguy√™n items kh√°c
        );
      }
      
      // N·∫øu ch∆∞a c√≥ th√¨ th√™m m·ªõi v·ªõi quantity = 1
      return [...prev, { ...product, quantity: 1 }];    // Spread operator th√™m item
    });
    
    // Feedback cho user
    alert(`ƒê√£ th√™m ${product.name} v√†o gi·ªè h√†ng!`);
  };

  // Handler ƒë∆°n gi·∫£n h∆°n - ch·ªâ nh·∫≠n data v√† x·ª≠ l√Ω
  const handleViewDetails = (product) => {
    alert(`Xem chi ti·∫øt s·∫£n ph·∫©m: ${product.name}`);
  };

  // =============================================================================
  // 6. SOCIAL POST HANDLERS - X·ª≠ l√Ω interactions ph·ª©c t·∫°p h∆°n
  // =============================================================================
  
  // Handler ƒë·ªÉ like/unlike post
  const handleLike = (postId) => {
    // setPosts ƒë·ªÉ update state c·ªßa posts array
    setPosts(prev => prev.map(post => {
      // Ch·ªâ update post c√≥ ID kh·ªõp
      if (post.id === postId) {
        return {
          ...post,                                        // Gi·ªØ nguy√™n t·∫•t c·∫£ props kh√°c
          userLiked: !post.userLiked,                    // Toggle boolean
          likes: post.userLiked ? post.likes - 1 : post.likes + 1 // Conditional update
        };
      }
      return post;                                        // Gi·ªØ nguy√™n posts kh√°c
    }));
  };

  // Handler m·ªü form comment  
  const handleComment = (postId) => {
    alert(`M·ªü form b√¨nh lu·∫≠n cho b√†i vi·∫øt ${postId}`);
  };

  // Handler chia s·∫ª
  const handleShare = (postId) => {
    alert(`Chia s·∫ª b√†i vi·∫øt ${postId}`);
  };

  // =============================================================================
  // 7. RENDER JSX - Tr·∫£ v·ªÅ giao di·ªán component
  // =============================================================================
  return (
    <div style={{
      backgroundColor: '#f8f9fa',      // Inline styles - object v·ªõi camelCase
      minHeight: '100vh',              // CSS properties th√†nh camelCase
      padding: '20px'                  // String values cho CSS
    }}>
      <div style={{
        maxWidth: '1200px',            // Container width
        margin: '0 auto'               // Center container
      }}>
        
        {/* =================================================================== */}
        {/* HEADER SECTION - Static content kh√¥ng c·∫ßn props */}
        {/* =================================================================== */}
        <header style={{
          textAlign: 'center',
          marginBottom: '40px',
          padding: '20px',
          backgroundColor: 'white',
          borderRadius: '12px',
          boxShadow: '0 2px 12px rgba(0,0,0,0.1)'
        }}>
          <h1 style={{
            color: '#333',
            marginBottom: '10px',
            fontSize: '32px'
          }}>
            Day 3 - Components & Props Demo
          </h1>
          <p style={{
            color: '#666',
            fontSize: '18px',
            margin: 0
          }}>
            H·ªçc c√°ch s·ª≠ d·ª•ng Props v·ªõi ProductCard v√† SocialPost
          </p>
        </header>

        {/* =================================================================== */}
        {/* CONDITIONAL RENDERING - Hi·ªÉn th·ªã cart ch·ªâ khi c√≥ items */}
        {/* =================================================================== */}
        {cart.length > 0 && (                              // Conditional rendering v·ªõi &&
          <div style={{
            backgroundColor: '#d4edda',                    // Success color
            border: '1px solid #c3e6cb',
            borderRadius: '8px',
            padding: '16px',
            marginBottom: '30px'
          }}>
            <h3 style={{ margin: '0 0 10px 0', color: '#155724' }}>
              üõí Gi·ªè h√†ng ({cart.reduce((sum, item) => sum + item.quantity, 0)} s·∫£n ph·∫©m)
            </h3>
            {/* MAP qua cart array ƒë·ªÉ hi·ªÉn th·ªã items */}
            {cart.map(item => (                           // Render danh s√°ch items
              <div key={item.id} style={{ marginBottom: '5px' }}>
                ‚Ä¢ {item.name} - SL: {item.quantity}
              </div>
            ))}
          </div>
        )}

        {/* =================================================================== */}
        {/* PRODUCTS SECTION - S·ª≠ d·ª•ng map() ƒë·ªÉ render nhi·ªÅu components */}
        {/* =================================================================== */}
        <section style={{ marginBottom: '50px' }}>
          <h2 style={{
            color: '#333',
            marginBottom: '20px',
            fontSize: '24px',
            textAlign: 'center'
          }}>
            üõçÔ∏è S·∫£n ph·∫©m n·ªïi b·∫≠t
          </h2>
          <div style={{
            display: 'flex',               // Flexbox layout
            flexWrap: 'wrap',              // Wrap xu·ªëng d√≤ng
            justifyContent: 'center',      // Center items
            gap: '20px'                    // Kho·∫£ng c√°ch gi·ªØa items
          }}>
            {/* =================================================================== */}
            {/* MAP OVER PRODUCTS - Render ProductCard cho m·ªói product */}
            {/* =================================================================== */}
            {products.map(product => (                    // Loop qua products array
              <ProductCard
                key={product.id}                          // KEY prop - b·∫Øt bu·ªôc, unique
                product={product}                         // PRODUCT prop - pass entire object
                onAddToCart={handleAddToCart}             // FUNCTION prop - callback handler
                onViewDetails={handleViewDetails}         // FUNCTION prop - another callback
              />
              // Component ProductCard s·∫Ω nh·∫≠n 4 props:
              // 1. key (React internal - kh√¥ng truy c·∫≠p ƒë∆∞·ª£c)
              // 2. product (object ch·ª©a t·∫•t c·∫£ th√¥ng tin s·∫£n ph·∫©m)
              // 3. onAddToCart (function ƒë·ªÉ g·ªçi khi user click Add to Cart)
              // 4. onViewDetails (function ƒë·ªÉ g·ªçi khi user click View Details)
            ))}
          </div>
        </section>

        {/* =================================================================== */}
        {/* SOCIAL POSTS SECTION - Render posts v·ªõi props ph·ª©c t·∫°p h∆°n */}
        {/* =================================================================== */}
        <section>
          <h2 style={{
            color: '#333',
            marginBottom: '20px',
            fontSize: '24px',
            textAlign: 'center'
          }}>
            üì± B·∫£ng tin x√£ h·ªôi
          </h2>
          <div style={{
            maxWidth: '600px',           // Gi·ªõi h·∫°n width cho posts
            margin: '0 auto'             // Center container
          }}>
            {/* =================================================================== */}
            {/* MAP OVER POSTS - Render SocialPost components */}
            {/* =================================================================== */}
            {posts.map(post => (                        // Loop qua posts array
              <SocialPost
                key={post.id}                           // Unique key
                post={post}                             // POST prop - object v·ªõi nhi·ªÅu nested properties
                onLike={handleLike}                     // FUNCTION prop - like handler
                onComment={handleComment}               // FUNCTION prop - comment handler  
                onShare={handleShare}                   // FUNCTION prop - share handler
              />
              // SocialPost component nh·∫≠n:
              // 1. post object ch·ª©a: author, content, image, timestamp, etc.
              // 2. 3 callback functions ƒë·ªÉ handle user interactions
              // Component s·∫Ω destructure post object ƒë·ªÉ l·∫•y c√°c properties c·∫ßn thi·∫øt
            ))}
          </div>
        </section>

        {/* =================================================================== */}
        {/* FOOTER - Static content v·ªõi summary */}
        {/* =================================================================== */}
        <footer style={{
          textAlign: 'center',
          marginTop: '50px',
          padding: '30px',
          backgroundColor: 'white',
          borderRadius: '12px',
          boxShadow: '0 2px 12px rgba(0,0,0,0.1)'
        }}>
          <h3 style={{ color: '#28a745', marginBottom: '15px' }}>
            ‚úÖ Ho√†n th√†nh Day 3!
          </h3>
          <p style={{ color: '#666', lineHeight: '1.6', margin: 0 }}>
            B·∫°n ƒë√£ h·ªçc c√°ch t·∫°o v√† s·ª≠ d·ª•ng Props trong React. Th·ª≠ ch·ªânh s·ª≠a d·ªØ li·ªáu 
            s·∫£n ph·∫©m v√† b√†i vi·∫øt ƒë·ªÉ xem component thay ƒë·ªïi nh∆∞ th·∫ø n√†o!
          </p>
        </footer>
      </div>
    </div>
  );
  // =============================================================================
  // K·∫æT TH√öC COMPONENT - Nh·ªØng ƒëi·ªÅu c·∫ßn nh·ªõ:
  // =============================================================================
  // 1. Props l√† READ-ONLY - component con kh√¥ng th·ªÉ thay ƒë·ªïi props
  // 2. State l√† MUTABLE - ch·ªâ c√≥ th·ªÉ thay ƒë·ªïi b·∫±ng setState function
  // 3. Event handlers ƒë∆∞·ª£c truy·ªÅn xu·ªëng component con th√¥ng qua props
  // 4. Data flow l√† ONE-WAY - t·ª´ cha xu·ªëng con
  // 5. Component con g·ªçi callback props ƒë·ªÉ communicate v·ªõi component cha
  // =============================================================================
}

export default App;
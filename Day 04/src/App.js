// =============================================================================
// DAY 4: STATE & LIFECYCLE DEMO - Advanced State Management & useEffect
// =============================================================================
// Component n√†y demo c√°ch t·ªï ch·ª©c m·ªôt app v·ªõi multiple demos
// v√† qu·∫£n l√Ω state ƒë·ªÉ switch between different components
// =============================================================================

import React, { useState } from 'react';
import ShoppingCart from './components/ShoppingCart';    // Demo localStorage + array state
import MultiStepForm from './components/MultiStepForm';  // Demo object state + validation
import QuizApp from './components/QuizApp';              // Demo useEffect + timers

function App() {
  // =============================================================================
  // 1. DEMO SELECTION STATE - Qu·∫£n l√Ω component n√†o ƒëang ƒë∆∞·ª£c hi·ªÉn th·ªã
  // =============================================================================
  // Simple string state ƒë·ªÉ track active demo
  const [activeDemo, setActiveDemo] = useState('cart'); // Default: shopping cart

  // =============================================================================
  // 2. DEMO CONFIGURATION - Array of objects ƒë·ªÉ define available demos
  // =============================================================================
  // T·∫°i sao d√πng array? D·ªÖ d√†ng th√™m/x√≥a demos, render dynamic navigation
  const demos = [
    {
      id: 'cart',                        // Unique identifier
      title: 'üõí Shopping Cart',         // Display title
      description: 'Demo useState v·ªõi localStorage v√† array manipulation', // Description
      component: ShoppingCart            // React component reference (not JSX!)
    },
    {
      id: 'form',
      title: 'üìù Multi-Step Form',
      description: 'Form nhi·ªÅu b∆∞·ªõc v·ªõi validation v√† object state',
      component: MultiStepForm
    },
    {
      id: 'quiz',
      title: 'üß† Quiz App', 
      description: '·ª®ng d·ª•ng quiz v·ªõi timer v√† useEffect',
      component: QuizApp
    }
  ];

  // =============================================================================
  // 3. DYNAMIC COMPONENT RESOLUTION - T√¨m component ƒë·ªÉ render
  // =============================================================================
  // Find matching demo v√† l·∫•y component reference
  // Optional chaining (?.) ƒë·ªÉ tr√°nh error n·∫øu kh√¥ng t√¨m th·∫•y
  const ActiveComponent = demos.find(demo => demo.id === activeDemo)?.component;

  // =============================================================================
  // 4. RENDER JSX - Layout structure v·ªõi navigation
  // =============================================================================
  return (
    <div style={{
      backgroundColor: '#f5f5f5',         // Light gray background
      minHeight: '100vh',                 // Full viewport height
      fontFamily: 'Arial, sans-serif'     // Font family
    }}>
      
      {/* ===================================================================== */}
      {/* HEADER SECTION - Static branding v√† title */}
      {/* ===================================================================== */}
      <header style={{
        backgroundColor: 'white',          // White background
        boxShadow: '0 2px 10px rgba(0,0,0,0.1)', // Drop shadow
        padding: '20px 0',                 // Vertical padding
        marginBottom: '30px'               // Bottom margin
      }}>
        <div style={{
          maxWidth: '1200px',              // Max width constraint
          margin: '0 auto',                // Center horizontally
          padding: '0 20px'                // Horizontal padding
        }}>
          <h1 style={{
            textAlign: 'center',           // Center alignment
            color: '#333',                 // Dark text
            marginBottom: '15px',          // Bottom spacing
            fontSize: '32px'               // Large font size
          }}>
            Day 4 - State & Lifecycle Demo
          </h1>
          <p style={{
            textAlign: 'center',           // Center alignment
            color: '#666',                 // Gray text
            fontSize: '18px',              // Medium font size
            margin: 0                      // Remove default margin
          }}>
            H·ªçc useState, useEffect v√† State Management th√¥ng qua c√°c v√≠ d·ª• th·ª±c t·∫ø
          </p>
        </div>
      </header>

      {/* ===================================================================== */}
      {/* NAVIGATION SECTION - Dynamic demo selection */}
      {/* ===================================================================== */}
      <div style={{
        maxWidth: '1200px',              // Container max width
        margin: '0 auto 30px',           // Center v·ªõi bottom margin
        padding: '0 20px'                // Horizontal padding
      }}>
        
        {/* DEMO SELECTION BUTTONS - Map qua demos array */}
        <div style={{
          display: 'grid',                          // CSS Grid layout
          gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))', // Responsive columns
          gap: '20px',                              // Gap between items
          marginBottom: '30px'                      // Bottom spacing
        }}>
          {/* MAP qua demos ƒë·ªÉ t·∫°o navigation buttons */}
          {demos.map(demo => (                      // Loop qua t·ª´ng demo
            <button
              key={demo.id}                         // Unique key cho list
              onClick={() => setActiveDemo(demo.id)} // Event handler ƒë·ªÉ switch demo
              style={{
                padding: '20px',                    // Button padding
                // CONDITIONAL STYLING d·ª±a tr√™n activeDemo state
                backgroundColor: activeDemo === demo.id ? '#007bff' : 'white', // Active vs inactive
                color: activeDemo === demo.id ? 'white' : '#333',             // Text color
                border: activeDemo === demo.id ? 'none' : '2px solid #007bff', // Border style
                borderRadius: '12px',               // Rounded corners
                cursor: 'pointer',                  // Pointer cursor
                textAlign: 'left',                  // Left align text
                transition: 'all 0.2s ease',       // Smooth transitions
                boxShadow: '0 2px 8px rgba(0,0,0,0.1)' // Drop shadow
              }}
            >
              <h3 style={{
                margin: '0 0 10px 0',               // Remove default margin, add bottom
                fontSize: '20px'                    // Font size
              }}>
                {demo.title}                        {/* Demo title t·ª´ array */}
              </h3>
              <p style={{
                margin: 0,                          // Remove margin
                fontSize: '14px',                   // Small font
                opacity: 0.8                       // Slightly transparent
              }}>
                {demo.description}                  {/* Demo description t·ª´ array */}
              </p>
            </button>
          ))}
        </div>

        {/* ================================================================= */}
        {/* USER GUIDANCE SECTION - Instructions cho user */}
        {/* ================================================================= */}
        <div style={{
          backgroundColor: '#e3f2fd',              // Light blue background
          border: '1px solid #2196f3',             // Blue border
          borderRadius: '8px',                     // Rounded corners
          padding: '15px',                         // Inner padding
          marginBottom: '20px'                     // Bottom margin
        }}>
          <h4 style={{ margin: '0 0 10px 0', color: '#1976d2' }}>
            üí° H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng
          </h4>
          <ul style={{ margin: 0, paddingLeft: '20px', color: '#333' }}>
            <li><strong>Shopping Cart:</strong> Th√™m s·∫£n ph·∫©m, thay ƒë·ªïi s·ªë l∆∞·ª£ng, x√≥a items. Data ƒë∆∞·ª£c l∆∞u trong localStorage</li>
            <li><strong>Multi-Step Form:</strong> ƒêi·ªÅn form nhi·ªÅu b∆∞·ªõc v·ªõi validation, progress bar v√† preview</li>
            <li><strong>Quiz App:</strong> L√†m quiz c√≥ timer, xem k·∫øt qu·∫£ chi ti·∫øt v√† explanation</li>
          </ul>
        </div>
      </div>

      {/* ===================================================================== */}
      {/* DYNAMIC COMPONENT RENDERING - Render component ƒë∆∞·ª£c ch·ªçn */}
      {/* ===================================================================== */}
      <main>
        {/* CONDITIONAL RENDERING v·ªõi dynamic component */}
        {ActiveComponent && <ActiveComponent />}
        {/* 
          C√°ch ho·∫°t ƒë·ªông:
          1. ActiveComponent l√† component reference t·ª´ demos array
          2. && operator ki·ªÉm tra component c√≥ t·ªìn t·∫°i kh√¥ng
          3. <ActiveComponent /> render component d∆∞·ªõi d·∫°ng JSX
          4. Khi activeDemo thay ƒë·ªïi ‚Üí component kh√°c ƒë∆∞·ª£c render
        */}
      </main>

      {/* ===================================================================== */}
      {/* FOOTER SECTION - Summary v√† key concepts */}
      {/* ===================================================================== */}
      <footer style={{
        backgroundColor: 'white',          // White background
        padding: '40px 20px',              // Generous padding
        marginTop: '50px',                 // Top margin
        borderTop: '1px solid #eee'        // Top border
      }}>
        <div style={{
          maxWidth: '800px',               // Content max width
          margin: '0 auto',                // Center container
          textAlign: 'center'              // Center text
        }}>
          <h3 style={{ color: '#28a745', marginBottom: '15px' }}>
            ‚úÖ Ho√†n th√†nh Day 4!
          </h3>
          <p style={{ color: '#666', lineHeight: '1.6', marginBottom: '20px' }}>
            B·∫°n ƒë√£ h·ªçc ƒë∆∞·ª£c c√°ch s·ª≠ d·ª•ng useState v√† useEffect ƒë·ªÉ qu·∫£n l√Ω state ph·ª©c t·∫°p. 
            Th·ª≠ ch·ªânh s·ª≠a code trong c√°c components ƒë·ªÉ hi·ªÉu r√µ h∆°n v·ªÅ c√°ch React re-render!
          </p>
          
          {/* ================================================================= */}
          {/* KEY CONCEPTS GRID - Educational summary */}
          {/* ================================================================= */}
          <div style={{
            display: 'grid',                        // CSS Grid layout
            gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))', // Responsive columns
            gap: '20px',                            // Gap between items
            marginTop: '30px'                       // Top margin
          }}>
            
            {/* useState CONCEPTS */}
            <div style={{
              backgroundColor: '#f8f9fa',           // Light background
              padding: '20px',                      // Inner padding
              borderRadius: '8px',                  // Rounded corners
              textAlign: 'left'                     // Left align content
            }}>
              <h4 style={{ color: '#007bff', marginBottom: '10px' }}>üéØ useState</h4>
              <ul style={{ fontSize: '14px', lineHeight: '1.5', paddingLeft: '15px' }}>
                <li>Primitive state (string, number, boolean)</li>      {/* Basic data types */}
                <li>Object state v·ªõi spread operator</li>               {/* Complex objects */}
                <li>Array state v·ªõi immutable updates</li>              {/* Array manipulation */}
                <li>Functional updates v·ªõi prevState</li>               {/* Previous state access */}
              </ul>
            </div>
            
            {/* useEffect CONCEPTS */}
            <div style={{
              backgroundColor: '#f8f9fa',
              padding: '20px',
              borderRadius: '8px',
              textAlign: 'left'
            }}>
              <h4 style={{ color: '#28a745', marginBottom: '10px' }}>‚ö° useEffect</h4>
              <ul style={{ fontSize: '14px', lineHeight: '1.5', paddingLeft: '15px' }}>
                <li>Mount effect (componentDidMount)</li>               {/* Initial load */}
                <li>Update effect v·ªõi dependencies</li>                 {/* Re-run conditions */}
                <li>Cleanup function (componentWillUnmount)</li>        {/* Memory cleanup */}
                <li>Timer v√† interval management</li>                   {/* Time-based effects */}
              </ul>
            </div>
            
            {/* SIDE EFFECTS CONCEPTS */}
            <div style={{
              backgroundColor: '#f8f9fa',
              padding: '20px',
              borderRadius: '8px',
              textAlign: 'left'
            }}>
              <h4 style={{ color: '#ffc107', marginBottom: '10px' }}>üíæ Side Effects</h4>
              <ul style={{ fontSize: '14px', lineHeight: '1.5', paddingLeft: '15px' }}>
                <li>LocalStorage integration</li>                       {/* Data persistence */}
                <li>Form validation v√† error handling</li>              {/* User input */}
                <li>Timer v√† countdown features</li>                    {/* Time management */}
                <li>Dynamic UI updates</li>                             {/* Interface changes */}
              </ul>
            </div>
          </div>
        </div>
      </footer>
    </div>
  );
  // =============================================================================
  // K·∫æT TH√öC COMPONENT - Key Learning Points:
  // =============================================================================
  // 1. APP ARCHITECTURE: T·ªï ch·ª©c app v·ªõi multiple demo components
  // 2. DYNAMIC RENDERING: Render components d·ª±a tr√™n state
  // 3. CONFIGURATION: S·ª≠ d·ª•ng arrays ƒë·ªÉ config navigation
  // 4. CONDITIONAL STYLING: Style d·ª±a tr√™n active state
  // 5. COMPONENT REFERENCES: Store v√† s·ª≠ d·ª•ng component references
  // 6. STATE MANAGEMENT: Simple state cho complex UI logic
  // =============================================================================
}

export default App;